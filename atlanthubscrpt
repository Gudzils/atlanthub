-- Локальный скрипт для StarterPlayerScripts
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Lighting = game:GetService("Lighting")
local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui", 10)

-- Удаляем старое меню, если оно существует
for _, gui in pairs(PlayerGui:GetChildren()) do
    if gui.Name == "CheatMenu" then
        gui:Destroy()
    end
end

-- Создаем ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "AimRoblox"
screenGui.Parent = PlayerGui
screenGui.Enabled = true
screenGui.ResetOnSpawn = false
print("ScreenGui создан и включен")

-- Основной фрейм
local mainFrame = Instance.new("Frame")
mainFrame.Name = "MainFrame"
mainFrame.Size = UDim2.new(0, 600, 0, 400)
mainFrame.Position = UDim2.new(0.5, -300, 0.5, -200)
mainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
mainFrame.BorderSizePixel = 0
local mainFrameCorner = Instance.new("UICorner")
mainFrameCorner.CornerRadius = UDim.new(0, 10)
mainFrameCorner.Parent = mainFrame
mainFrame.Parent = screenGui
print("MainFrame создан")

-- Верхняя панель
local topBar = Instance.new("Frame")
topBar.Name = "TopBar"
topBar.Size = UDim2.new(1, 0, 0, 40)
topBar.Position = UDim2.new(0, 0, 0, 0)
topBar.BackgroundColor3 = Color3.fromRGB(200, 0, 0)
topBar.BorderSizePixel = 0
local topBarCorner = Instance.new("UICorner")
topBarCorner.CornerRadius = UDim.new(0, 10)
topBarCorner.Parent = topBar
topBar.Parent = mainFrame
print("TopBar создан")

-- Заголовок
local title = Instance.new("TextLabel")
title.Name = "Title"
title.Size = UDim2.new(0, 200, 1, 0)
title.Position = UDim2.new(0, 10, 0, 0)
title.Text = "Cheat Menu"
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.Font = Enum.Font.FredokaOne
title.TextSize = 20
title.BackgroundTransparency = 1
title.BorderSizePixel = 0
title.Parent = topBar
print("Title создан")

-- Кнопки верхней панели
local tabs = {"LEGITBOT", "RAGEBOT", "VISUALS", "SETTINGS"}
local tabFrames = {}
local tabStates = {}

for i, tabName in ipairs(tabs) do
    local tabButton = Instance.new("TextButton")
    tabButton.Name = tabName .. "Button"
    tabButton.Size = UDim2.new(0, 80, 1, -10)
    tabButton.Position = UDim2.new(0, 220 + (i-1)*90, 0, 5)
    tabButton.Text = tabName
    tabButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    tabButton.Font = Enum.Font.FredokaOne
    tabButton.TextSize = 16
    tabButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    tabButton.BorderSizePixel = 2
    tabButton.BorderColor3 = Color3.fromRGB(255, 255, 255)
    local tabButtonCorner = Instance.new("UICorner")
    tabButtonCorner.CornerRadius = UDim.new(0, 5)
    tabButtonCorner.Parent = tabButton
    tabButton.Parent = topBar
    print(tabName .. "Button создан")

    local tabFrame = Instance.new("Frame")
    tabFrame.Name = tabName .. "Tab"
    tabFrame.Size = UDim2.new(1, 0, 1, 0)
    tabFrame.Position = UDim2.new(0, 0, 0, 0)
    tabFrame.BackgroundTransparency = 1
    tabFrame.Visible = false
    tabFrames[tabName] = tabFrame
    tabStates[tabName] = {button = tabButton, frame = tabFrame}
end

-- Левая панель
local leftPanel = Instance.new("Frame")
leftPanel.Name = "LeftPanel"
leftPanel.Size = UDim2.new(0, 150, 1, -40)
leftPanel.Position = UDim2.new(0, 0, 0, 40)
leftPanel.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
leftPanel.BorderSizePixel = 0
local leftPanelCorner = Instance.new("UICorner")
leftPanelCorner.CornerRadius = UDim.new(0, 10)
leftPanelCorner.Parent = leftPanel
leftPanel.Parent = mainFrame
print("LeftPanel создан")

-- Кнопки левой панели (CHARMS и WORLD)
local leftTabs = {"CHARMS", "WORLD"}
local leftTabFrames = {}
local leftTabStates = {}

for i, tabName in ipairs(leftTabs) do
    local tabButton = Instance.new("TextButton")
    tabButton.Name = tabName .. "Button"
    tabButton.Size = UDim2.new(1, -10, 0, 40)
    tabButton.Position = UDim2.new(0, 5, 0, (i-1)*50 + 5)
    tabButton.Text = tabName
    tabButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    tabButton.Font = Enum.Font.FredokaOne
    tabButton.TextSize = 16
    tabButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    tabButton.BorderSizePixel = 2
    tabButton.BorderColor3 = Color3.fromRGB(255, 255, 255)
    local tabButtonCorner = Instance.new("UICorner")
    tabButtonCorner.CornerRadius = UDim.new(0, 5)
    tabButtonCorner.Parent = tabButton
    tabButton.Parent = leftPanel
    print(tabName .. "Button создан")

    local tabFrame = Instance.new("Frame")
    tabFrame.Name = tabName .. "Tab"
    tabFrame.Size = UDim2.new(1, 0, 1, 0)
    tabFrame.Position = UDim2.new(0, 0, 0, 0)
    tabFrame.BackgroundTransparency = 1
    tabFrame.Visible = (tabName == "CHARMS") -- Открываем CHARMS по умолчанию
    leftTabFrames[tabName] = tabFrame
    leftTabStates[tabName] = {button = tabButton, frame = tabFrame}
end

-- Аватар игрока в левом нижнем углу
local playerAvatarLeft = Instance.new("ImageLabel")
playerAvatarLeft.Name = "PlayerAvatarLeft"
playerAvatarLeft.Size = UDim2.new(0, 100, 0, 100)
playerAvatarLeft.Position = UDim2.new(0.5, -50, 1, -150) -- 150 пикселей от низа (100 для аватара + 30 для ника + 20 отступ)
playerAvatarLeft.BackgroundTransparency = 1
playerAvatarLeft.Image = Players:GetUserThumbnailAsync(LocalPlayer.UserId, Enum.ThumbnailType.HeadShot, Enum.ThumbnailSize.Size100x100)
playerAvatarLeft.Parent = leftPanel
print("Аватар игрока в LeftPanel добавлен")

-- Ник игрока под аватаром
local playerNameLeft = Instance.new("TextLabel")
playerNameLeft.Name = "PlayerNameLeft"
playerNameLeft.Size = UDim2.new(0, 120, 0, 30)
playerNameLeft.Position = UDim2.new(0.5, -60, 1, -40) -- 40 пикселей от низа (30 для текста + 10 отступ)
playerNameLeft.Text = LocalPlayer.Name
playerNameLeft.TextColor3 = Color3.fromRGB(255, 255, 255)
playerNameLeft.Font = Enum.Font.FredokaOne
playerNameLeft.TextSize = 16
playerNameLeft.BackgroundTransparency = 1
playerNameLeft.TextXAlignment = Enum.TextXAlignment.Center
playerNameLeft.Parent = leftPanel
print("Ник игрока в LeftPanel добавлен")

-- Правая панель
local contentPanel = Instance.new("Frame")
contentPanel.Name = "ContentPanel"
contentPanel.Size = UDim2.new(1, -150, 1, -40)
contentPanel.Position = UDim2.new(0, 150, 0, 40)
contentPanel.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
contentPanel.BorderSizePixel = 0
local contentPanelCorner = Instance.new("UICorner")
contentPanelCorner.CornerRadius = UDim.new(0, 10)
contentPanelCorner.Parent = contentPanel
contentPanel.Parent = mainFrame
print("ContentPanel создан")

-- Добавляем вкладки верхней панели в ContentPanel
for _, tabFrame in pairs(tabFrames) do
    tabFrame.Parent = contentPanel
end

-- Добавляем вкладки левой панели в ContentPanel
for _, tabFrame in pairs(leftTabFrames) do
    tabFrame.Parent = contentPanel
end

-- Вкладка "CHARMS" (пустая)
local charmsTab = leftTabFrames["CHARMS"]
print("CharmsTab создан (пустой)")

-- Вкладка "WORLD" (настройки неба)
local worldTab = leftTabFrames["WORLD"]

-- Добавляем ScrollingFrame для прокрутки
local worldScrollFrame = Instance.new("ScrollingFrame")
worldScrollFrame.Name = "WorldScrollFrame"
worldScrollFrame.Size = UDim2.new(1, 0, 1, 0)
worldScrollFrame.Position = UDim2.new(0, 0, 0, 0)
worldScrollFrame.BackgroundTransparency = 1
worldScrollFrame.BorderSizePixel = 0
worldScrollFrame.ScrollBarThickness = 5
worldScrollFrame.CanvasSize = UDim2.new(0, 0, 0, 200) -- Начальный размер канваса, будет обновляться
worldScrollFrame.Parent = worldTab
print("ScrollingFrame добавлен для WORLD")

-- Функция для обновления размера CanvasSize
local function updateCanvasSize(frame)
    local totalHeight = 0
    for _, child in pairs(frame:GetChildren()) do
        if child:IsA("GuiObject") and child.Visible then
            local childBottom = child.Position.Y.Offset + child.Size.Y.Offset
            if childBottom > totalHeight then
                totalHeight = childBottom
            end
        end
    end
    frame.CanvasSize = UDim2.new(0, 0, 0, totalHeight + 20) -- Добавляем небольшой отступ
end

-- Логика изменения неба
local skyEnabled = false
local currentSky = nil
local skyAssetId = "13690673545" -- Начальный Asset ID

local function applySky()
    -- Удаляем существующее небо, если оно есть
    if currentSky then
        currentSky:Destroy()
        currentSky = nil
    end

    if skyEnabled then
        -- Создаем новое небо
        local sky = Instance.new("Sky")
        sky.Name = "CustomSky"
        sky.SkyboxBk = "rbxassetid://" .. skyAssetId
        sky.SkyboxDn = "rbxassetid://" .. skyAssetId
        sky.SkyboxFt = "rbxassetid://" .. skyAssetId
        sky.SkyboxLf = "rbxassetid://" .. skyAssetId
        sky.SkyboxRt = "rbxassetid://" .. skyAssetId
        sky.SkyboxUp = "rbxassetid://" .. skyAssetId
        sky.Parent = Lighting
        currentSky = sky
        print("Небо установлено с Asset ID: " .. skyAssetId)
    end
end

local function toggleSky()
    skyEnabled = not skyEnabled
    if not skyEnabled and currentSky then
        currentSky:Destroy()
        currentSky = nil
        print("Небо отключено")
    elseif skyEnabled then
        applySky()
    end
end

-- Переключатель для неба
local skyToggle = Instance.new("TextButton")
skyToggle.Name = "SkyToggle"
skyToggle.Size = UDim2.new(0, 120, 0, 30)
skyToggle.Position = UDim2.new(0.5, -60, 0, 10)
skyToggle.Text = "Sky: OFF"
skyToggle.TextColor3 = Color3.fromRGB(255, 255, 255)
skyToggle.Font = Enum.Font.FredokaOne
skyToggle.TextSize = 16
skyToggle.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
skyToggle.BorderSizePixel = 2
skyToggle.BorderColor3 = Color3.fromRGB(255, 255, 255)
local skyToggleCorner = Instance.new("UICorner")
skyToggleCorner.CornerRadius = UDim.new(0, 5)
skyToggleCorner.Parent = skyToggle
skyToggle.Parent = worldScrollFrame
print("Переключатель неба добавлен")

-- Логика переключателя неба
skyToggle.MouseButton1Click:Connect(function()
    toggleSky()
    skyToggle.Text = "Sky: " .. (skyEnabled and "ON" or "OFF")
end)

-- Текстовое поле для Asset ID
local skyAssetIdBox = Instance.new("TextBox")
skyAssetIdBox.Name = "SkyAssetIdBox"
skyAssetIdBox.Size = UDim2.new(0, 200, 0, 30)
skyAssetIdBox.Position = UDim2.new(0.5, -100, 0, 50)
skyAssetIdBox.Text = skyAssetId
skyAssetIdBox.TextColor3 = Color3.fromRGB(255, 255, 255)
skyAssetIdBox.Font = Enum.Font.FredokaOne
skyAssetIdBox.TextSize = 16
skyAssetIdBox.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
skyAssetIdBox.BorderSizePixel = 2
skyAssetIdBox.BorderColor3 = Color3.fromRGB(255, 255, 255)
local skyAssetIdBoxCorner = Instance.new("UICorner")
skyAssetIdBoxCorner.CornerRadius = UDim.new(0, 5)
skyAssetIdBoxCorner.Parent = skyAssetIdBox
skyAssetIdBox.Parent = worldScrollFrame
print("Текстовое поле для Asset ID неба добавлено")

-- Кнопка для применения Asset ID
local applySkyButton = Instance.new("TextButton")
applySkyButton.Name = "ApplySkyButton"
applySkyButton.Size = UDim2.new(0, 120, 0, 30)
applySkyButton.Position = UDim2.new(0.5, -60, 0, 90)
applySkyButton.Text = "Apply Sky"
applySkyButton.TextColor3 = Color3.fromRGB(255, 255, 255)
applySkyButton.Font = Enum.Font.FredokaOne
applySkyButton.TextSize = 16
applySkyButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
applySkyButton.BorderSizePixel = 2
applySkyButton.BorderColor3 = Color3.fromRGB(255, 255, 255)
local applySkyButtonCorner = Instance.new("UICorner")
applySkyButtonCorner.CornerRadius = UDim.new(0, 5)
applySkyButtonCorner.Parent = applySkyButton
applySkyButton.Parent = worldScrollFrame
print("Кнопка применения Asset ID неба добавлена")

-- Логика кнопки применения
applySkyButton.MouseButton1Click:Connect(function()
    local newAssetId = skyAssetIdBox.Text
    if newAssetId and newAssetId ~= "" then
        -- Проверяем, является ли введенное значение числом
        local assetIdNumber = tonumber(newAssetId)
        if assetIdNumber then
            skyAssetId = tostring(assetIdNumber)
            print("Asset ID неба обновлен: " .. skyAssetId)
            if skyEnabled then
                applySky()
            end
        else
            warn("Некорректный Asset ID: введите число")
        end
    else
        warn("Asset ID не может быть пустым")
    end
end)

-- Обновляем CanvasSize после добавления всех элементов
updateCanvasSize(worldScrollFrame)

-- Переключение вкладок верхней панели
for _, tabName in ipairs(tabs) do
    local button = topBar:FindFirstChild(tabName .. "Button")
    button.MouseButton1Click:Connect(function()
        -- Скрываем все вкладки
        for _, state in pairs(tabStates) do
            state.frame.Visible = false
        end
        for _, state in pairs(leftTabStates) do
            state.frame.Visible = false
        end
        -- Показываем выбранную верхнюю вкладку
        tabFrames[tabName].Visible = true
        print("Переключено на вкладку " .. tabName)
    end)
end

-- Переключение вкладок левой панели
for _, tabName in ipairs(leftTabs) do
    local button = leftPanel:FindFirstChild(tabName .. "Button")
    button.MouseButton1Click:Connect(function()
        -- Скрываем все вкладки
        for _, state in pairs(leftTabStates) do
            state.frame.Visible = false
        end
        for _, state in pairs(tabStates) do
            state.frame.Visible = false
        end
        -- Показываем выбранную боковую вкладку
        leftTabFrames[tabName].Visible = true
        print("Переключено на вкладку " .. tabName)
    end)
end

-- Перемещение меню
local dragging = false
local dragStart = nil
local startPos = nil

topBar.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = mainFrame.Position
        print("Начато перетаскивание")
    end
end)

topBar.InputChanged:Connect(function(input)
    if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
        local delta = input.Position - dragStart
        mainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        print("Меню перемещено на " .. tostring(mainFrame.Position))
    end
end)

topBar.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = false
        print("Перетаскивание завершено")
    end
end)

-- Открытие/закрытие меню по F6
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if input.KeyCode == Enum.KeyCode.F6 then
        screenGui.Enabled = not screenGui.Enabled
        print("Меню " .. (screenGui.Enabled and "открыто" or "закрыто"))
    end
end)

-- Логика спина для LEGITBOT
local spinning = false
local spinSpeed = 1

local function activateSpin()
    spinning = true
    print("Скорость спина: " .. spinSpeed)
end

local function stopSpin()
    spinning = false
    print("Скорость спина: " .. spinSpeed)
end

local function onRenderSteppedSpin()
    if spinning and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
        LocalPlayer.Character.HumanoidRootPart.CFrame = LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.Angles(0, math.rad(spinSpeed), 0)
    end
end

-- Подключаем RenderStepped для спина
RunService.RenderStepped:Connect(onRenderSteppedSpin)

-- Настройка содержимого вкладки LEGITBOT
local legitBotTab = tabFrames["LEGITBOT"]

-- Добавляем ScrollingFrame для прокрутки
local scrollFrame = Instance.new("ScrollingFrame")
scrollFrame.Name = "LegitBotScrollFrame"
scrollFrame.Size = UDim2.new(1, 0, 1, 0)
scrollFrame.Position = UDim2.new(0, 0, 0, 0)
scrollFrame.BackgroundTransparency = 1
scrollFrame.BorderSizePixel = 0
scrollFrame.ScrollBarThickness = 5
scrollFrame.CanvasSize = UDim2.new(0, 0, 0, 500) -- Начальный размер канваса, будет обновляться
scrollFrame.Parent = legitBotTab
print("ScrollingFrame добавлен для LEGITBOT")

-- Аватар игрока
local playerAvatar = Instance.new("ImageLabel")
playerAvatar.Name = "PlayerAvatar"
playerAvatar.Size = UDim2.new(0, 100, 0, 100)
playerAvatar.Position = UDim2.new(0.5, -50, 0, 10)
playerAvatar.BackgroundTransparency = 1
playerAvatar.Image = Players:GetUserThumbnailAsync(LocalPlayer.UserId, Enum.ThumbnailType.HeadShot, Enum.ThumbnailSize.Size100x100)
playerAvatar.Parent = scrollFrame
print("Аватар игрока добавлен")

-- Ник игрока
local playerName = Instance.new("TextLabel")
playerName.Name = "PlayerName"
playerName.Size = UDim2.new(0, 200, 0, 30)
playerName.Position = UDim2.new(0.5, -100, 0, 120)
playerName.Text = LocalPlayer.Name
playerName.TextColor3 = Color3.fromRGB(255, 255, 255)
playerName.Font = Enum.Font.FredokaOne
playerName.TextSize = 20
playerName.BackgroundTransparency = 1
playerName.Parent = scrollFrame
print("Ник игрока добавлен")

-- Переключатель для спина
local spinToggle = Instance.new("TextButton")
spinToggle.Name = "SpinToggle"
spinToggle.Size = UDim2.new(0, 120, 0, 30)
spinToggle.Position = UDim2.new(0.5, -60, 0, 160)
spinToggle.Text = "Spin: OFF"
spinToggle.TextColor3 = Color3.fromRGB(255, 255, 255)
spinToggle.Font = Enum.Font.FredokaOne
spinToggle.TextSize = 16
spinToggle.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
spinToggle.BorderSizePixel = 2
spinToggle.BorderColor3 = Color3.fromRGB(255, 255, 255)
local spinToggleCorner = Instance.new("UICorner")
spinToggleCorner.CornerRadius = UDim.new(0, 5)
spinToggleCorner.Parent = spinToggle
spinToggle.Parent = scrollFrame
print("Переключатель спина добавлен")

-- Регулятор скорости спина (слайдер)
local speedSlider = Instance.new("Frame")
speedSlider.Name = "SpeedSlider"
speedSlider.Size = UDim2.new(0, 200, 0, 20)
speedSlider.Position = UDim2.new(0.5, -100, 0, 200)
speedSlider.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
speedSlider.BorderSizePixel = 2
speedSlider.BorderColor3 = Color3.fromRGB(255, 255, 255)
local speedSliderCorner = Instance.new("UICorner")
speedSliderCorner.CornerRadius = UDim.new(0, 5)
speedSliderCorner.Parent = speedSlider
speedSlider.Parent = scrollFrame

local sliderBar = Instance.new("Frame")
sliderBar.Name = "SliderBar"
sliderBar.Size = UDim2.new(0, 20, 1, 0)
sliderBar.Position = UDim2.new(0, 0, 0, 0)
sliderBar.BackgroundColor3 = Color3.fromRGB(200, 0, 0)
sliderBar.BorderSizePixel = 0
local sliderBarCorner = Instance.new("UICorner")
sliderBarCorner.CornerRadius = UDim.new(0, 5)
sliderBarCorner.Parent = sliderBar
sliderBar.Parent = speedSlider

local speedLabel = Instance.new("TextLabel")
speedLabel.Name = "SpeedLabel"
speedLabel.Size = UDim2.new(0, 100, 0, 20)
speedLabel.Position = UDim2.new(0.5, -50, 0, 230)
speedLabel.Text = "Spin Speed: 1"
speedLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
speedLabel.Font = Enum.Font.FredokaOne
speedLabel.TextSize = 16
speedLabel.BackgroundTransparency = 1
speedLabel.Parent = scrollFrame
print("Слайдер скорости спина добавлен")

-- Логика слайдера для скорости спина
local sliding = false
speedSlider.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        sliding = true
    end
end)

speedSlider.InputChanged:Connect(function(input)
    if sliding and input.UserInputType == Enum.UserInputType.MouseMovement then
        local mouseX = input.Position.X
        local sliderX = speedSlider.AbsolutePosition.X
        local sliderWidth = speedSlider.AbsoluteSize.X
        local relativeX = math.clamp((mouseX - sliderX) / sliderWidth, 0, 1)
        sliderBar.Position = UDim2.new(relativeX, -10, 0, 0)
        spinSpeed = math.floor(relativeX * 50) + 1 -- Скорость от 1 до 50
        speedLabel.Text = "Spin Speed: " .. spinSpeed
    end
end)

speedSlider.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        sliding = false
    end
end)

-- Логика переключателя спина
spinToggle.MouseButton1Click:Connect(function()
    if spinning then
        stopSpin()
        spinToggle.Text = "Spin: OFF"
    else
        activateSpin()
        spinToggle.Text = "Spin: ON"
    end
end)

-- Отображение скорости игрока
local playerSpeedLabel = Instance.new("TextLabel")
playerSpeedLabel.Name = "PlayerSpeedLabel"
playerSpeedLabel.Size = UDim2.new(0, 200, 0, 20)
playerSpeedLabel.Position = UDim2.new(0.5, -100, 0, 260)
playerSpeedLabel.Text = "Player Speed: 0 studs/s"
playerSpeedLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
playerSpeedLabel.Font = Enum.Font.FredokaOne
playerSpeedLabel.TextSize = 16
playerSpeedLabel.BackgroundTransparency = 1
playerSpeedLabel.Parent = scrollFrame
print("Метка скорости игрока добавлена")

-- Регулятор скорости игрока (слайдер)
local playerSpeedSlider = Instance.new("Frame")
playerSpeedSlider.Name = "PlayerSpeedSlider"
playerSpeedSlider.Size = UDim2.new(0, 200, 0, 20)
playerSpeedSlider.Position = UDim2.new(0.5, -100, 0, 290)
playerSpeedSlider.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
playerSpeedSlider.BorderSizePixel = 2
playerSpeedSlider.BorderColor3 = Color3.fromRGB(255, 255, 255)
local playerSpeedSliderCorner = Instance.new("UICorner")
playerSpeedSliderCorner.CornerRadius = UDim.new(0, 5)
playerSpeedSliderCorner.Parent = playerSpeedSlider
playerSpeedSlider.Parent = scrollFrame

local playerSliderBar = Instance.new("Frame")
playerSliderBar.Name = "PlayerSliderBar"
playerSliderBar.Size = UDim2.new(0, 20, 1, 0)
playerSliderBar.Position = UDim2.new(0, 0, 0, 0)
playerSliderBar.BackgroundColor3 = Color3.fromRGB(200, 0, 0)
playerSliderBar.BorderSizePixel = 0
local playerSliderBarCorner = Instance.new("UICorner")
playerSliderBarCorner.CornerRadius = UDim.new(0, 5)
playerSliderBarCorner.Parent = playerSliderBar
playerSliderBar.Parent = playerSpeedSlider

local playerSpeedValueLabel = Instance.new("TextLabel")
playerSpeedValueLabel.Name = "PlayerSpeedValueLabel"
playerSpeedValueLabel.Size = UDim2.new(0, 100, 0, 20)
playerSpeedValueLabel.Position = UDim2.new(0.5, -50, 0, 320)
playerSpeedValueLabel.Text = "Walk Speed: 16"
playerSpeedValueLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
playerSpeedValueLabel.Font = Enum.Font.FredokaOne
playerSpeedValueLabel.TextSize = 16
playerSpeedValueLabel.BackgroundTransparency = 1
playerSpeedValueLabel.Parent = scrollFrame
print("Слайдер скорости игрока добавлен")

-- Логика слайдера для скорости игрока
local playerSliding = false
playerSpeedSlider.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        playerSliding = true
    end
end)

playerSpeedSlider.InputChanged:Connect(function(input)
    if playerSliding and input.UserInputType == Enum.UserInputType.MouseMovement then
        local mouseX = input.Position.X
        local sliderX = playerSpeedSlider.AbsolutePosition.X
        local sliderWidth = playerSpeedSlider.AbsoluteSize.X
        local relativeX = math.clamp((mouseX - sliderX) / sliderWidth, 0, 1)
        playerSliderBar.Position = UDim2.new(relativeX, -10, 0, 0)
        local newWalkSpeed = math.floor(relativeX * 100) + 16 -- Скорость от 16 до 116
        if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
            LocalPlayer.Character.Humanoid.WalkSpeed = newWalkSpeed
        end
        playerSpeedValueLabel.Text = "Walk Speed: " .. newWalkSpeed
    end
end)

playerSpeedSlider.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        playerSliding = false
    end
end)

-- Логика вычисления скорости игрока
local lastPosition = nil
local lastTime = tick()

RunService.RenderStepped:Connect(function()
    if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
        local hrp = LocalPlayer.Character.HumanoidRootPart
        local currentPosition = hrp.Position
        local currentTime = tick()

        if lastPosition then
            local deltaTime = currentTime - lastTime
            local distance = (currentPosition - lastPosition).Magnitude
            local speed = distance / deltaTime -- Скорость в studs per second
            playerSpeedLabel.Text = string.format("Player Speed: %.1f studs/s", speed)
        end

        lastPosition = currentPosition
        lastTime = currentTime
    else
        playerSpeedLabel.Text = "Player Speed: 0 studs/s"
        lastPosition = nil
    end
end)

-- Логика aimbot’а для LEGITBOT
-- Конфигурация aimbot’а
local aimbotConfig = {
    TeamCheck = false,   -- Проверка на команду
    FOV = 150,           -- Начальный радиус FOV
    Smoothing = 1,       -- Плавность наведения
}

-- GUI для FOV (круг)
local FOVring
if Drawing then
    FOVring = Drawing.new("Circle")
    FOVring.Visible = false
    FOVring.Thickness = 1.5
    FOVring.Radius = aimbotConfig.FOV
    FOVring.Transparency = 1
    FOVring.Color = Color3.fromRGB(255, 128, 128) -- Красный по умолчанию
    FOVring.Position = workspace.CurrentCamera.ViewportSize / 2
else
    warn("Drawing API не поддерживается вашим инжектором. Aimbot не будет работать.")
end

-- Функция для поиска ближайшего видимого игрока
local function getClosestVisiblePlayer(camera)
    local ray = Ray.new(camera.CFrame.Position, camera.CFrame.LookVector)
    local closestPlayer = nil
    local closestDistance = math.huge
    
    for _, player in pairs(game.Players:GetPlayers()) do
        if player ~= game.Players.LocalPlayer then
            if aimbotConfig.TeamCheck and player.Team == LocalPlayer.Team then
                continue
            end
            local character = player.Character
            if character and character:FindFirstChild("Head") then
                local headPosition = character.Head.Position
                local targetPosition = ray:ClosestPoint(headPosition)
                local distance = (targetPosition - headPosition).Magnitude
                
                if distance < closestDistance then
                    closestDistance = distance
                    closestPlayer = player
                end
            end
        end
    end
    
    return closestPlayer
end

-- Функция для обновления aimbot’а
local aimbotEnabled = false
local aimbotConnection

local function updateAimbot()
    if aimbotEnabled then
        local currentCamera = workspace.CurrentCamera
        local crosshairPosition = currentCamera.ViewportSize / 2
        local closestPlayer = getClosestVisiblePlayer(currentCamera)
        
        if closestPlayer then
            local headPosition = closestPlayer.Character.Head.Position
            local headScreenPosition = currentCamera:WorldToScreenPoint(headPosition)
            local distanceToCrosshair = (Vector2.new(headScreenPosition.X, headScreenPosition.Y) - crosshairPosition).Magnitude
            
            if distanceToCrosshair < aimbotConfig.FOV then
                currentCamera.CFrame = currentCamera.CFrame:Lerp(CFrame.new(currentCamera.CFrame.Position, headPosition), aimbotConfig.Smoothing)
            end
        end
    end
end

-- Функция для включения/выключения aimbot’а
local function toggleAimbot()
    aimbotEnabled = not aimbotEnabled
    if aimbotEnabled then
        if FOVring then
            FOVring.Visible = true
            FOVring.Position = workspace.CurrentCamera.ViewportSize / 2
            FOVring.Radius = aimbotConfig.FOV
        end
        aimbotConnection = RunService.RenderStepped:Connect(updateAimbot)
    else
        if FOVring then
            FOVring.Visible = false
        end
        if aimbotConnection then
            aimbotConnection:Disconnect()
        end
    end
end

-- Элементы управления aimbot’ом на вкладке LEGITBOT (снизу, в центре)
-- Переключатель для aimbot’а
local aimbotToggle = Instance.new("TextButton")
aimbotToggle.Name = "AimbotToggle"
aimbotToggle.Size = UDim2.new(0, 120, 0, 30)
aimbotToggle.Position = UDim2.new(0.5, -60, 0, 350)
aimbotToggle.Text = "Aimbot: OFF"
aimbotToggle.TextColor3 = Color3.fromRGB(255, 255, 255)
aimbotToggle.Font = Enum.Font.FredokaOne
aimbotToggle.TextSize = 16
aimbotToggle.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
aimbotToggle.BorderSizePixel = 2
aimbotToggle.BorderColor3 = Color3.fromRGB(255, 255, 255)
local aimbotToggleCorner = Instance.new("UICorner")
aimbotToggleCorner.CornerRadius = UDim.new(0, 5)
aimbotToggleCorner.Parent = aimbotToggle
aimbotToggle.Parent = scrollFrame
print("Переключатель aimbot’а добавлен")

-- Логика переключателя aimbot’а
aimbotToggle.MouseButton1Click:Connect(function()
    toggleAimbot()
    aimbotToggle.Text = "Aimbot: " .. (aimbotEnabled and "ON" or "OFF")
end)

-- Выбор цвета FOV
local colors = {
    Red = Color3.fromRGB(255, 128, 128),
    Blue = Color3.fromRGB(0, 128, 255),
    Yellow = Color3.fromRGB(255, 255, 0),
    Purple = Color3.fromRGB(128, 0, 128)
}

local currentColor = "Red"

local colorButton = Instance.new("TextButton")
colorButton.Name = "ColorButton"
colorButton.Size = UDim2.new(0, 120, 0, 30)
colorButton.Position = UDim2.new(0.5, -60, 0, 390)
colorButton.Text = "Color: Red"
colorButton.TextColor3 = Color3.fromRGB(255, 255, 255)
colorButton.Font = Enum.Font.FredokaOne
colorButton.TextSize = 16
colorButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
colorButton.BorderSizePixel = 2
colorButton.BorderColor3 = Color3.fromRGB(255, 255, 255)
local colorButtonCorner = Instance.new("UICorner")
colorButtonCorner.CornerRadius = UDim.new(0, 5)
colorButtonCorner.Parent = colorButton
colorButton.Parent = scrollFrame
print("Кнопка выбора цвета FOV добавлена")

-- Логика смены цвета
local colorOrder = {"Red", "Blue", "Yellow", "Purple"}
local colorIndex = 1

colorButton.MouseButton1Click:Connect(function()
    colorIndex = (colorIndex % #colorOrder) + 1
    currentColor = colorOrder[colorIndex]
    colorButton.Text = "Color: " .. currentColor
    if FOVring then
        FOVring.Color = colors[currentColor]
    end
end)

-- Регулятор размера FOV (слайдер)
local fovSlider = Instance.new("Frame")
fovSlider.Name = "FOVSlider"
fovSlider.Size = UDim2.new(0, 200, 0, 20)
fovSlider.Position = UDim2.new(0.5, -100, 0, 430)
fovSlider.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
fovSlider.BorderSizePixel = 2
fovSlider.BorderColor3 = Color3.fromRGB(255, 255, 255)
local fovSliderCorner = Instance.new("UICorner")
fovSliderCorner.CornerRadius = UDim.new(0, 5)
fovSliderCorner.Parent = fovSlider
fovSlider.Parent = scrollFrame

local fovSliderBar = Instance.new("Frame")
fovSliderBar.Name = "FOVSliderBar"
fovSliderBar.Size = UDim2.new(0, 20, 1, 0)
fovSliderBar.Position = UDim2.new((aimbotConfig.FOV - 50) / 250, -10, 0, 0) -- Начальное значение FOV = 150
fovSliderBar.BackgroundColor3 = Color3.fromRGB(200, 0, 0)
fovSliderBar.BorderSizePixel = 0
local fovSliderBarCorner = Instance.new("UICorner")
fovSliderBarCorner.CornerRadius = UDim.new(0, 5)
fovSliderBarCorner.Parent = fovSliderBar
fovSliderBar.Parent = fovSlider

local fovLabel = Instance.new("TextLabel")
fovLabel.Name = "FOVLabel"
fovLabel.Size = UDim2.new(0, 100, 0, 20)
fovLabel.Position = UDim2.new(0.5, -50, 0, 460)
fovLabel.Text = "FOV: 150"
fovLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
fovLabel.Font = Enum.Font.FredokaOne
fovLabel.TextSize = 16
fovLabel.BackgroundTransparency = 1
fovLabel.Parent = scrollFrame
print("Слайдер размера FOV добавлен")

-- Логика слайдера для размера FOV
local fovSliding = false
fovSlider.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        fovSliding = true
    end
end)

fovSlider.InputChanged:Connect(function(input)
    if fovSliding and input.UserInputType == Enum.UserInputType.MouseMovement then
        local mouseX = input.Position.X
        local sliderX = fovSlider.AbsolutePosition.X
        local sliderWidth = fovSlider.AbsoluteSize.X
        local relativeX = math.clamp((mouseX - sliderX) / sliderWidth, 0, 1)
        fovSliderBar.Position = UDim2.new(relativeX, -10, 0, 0)
        aimbotConfig.FOV = math.floor(relativeX * 250) + 50 -- FOV от 50 до 300
        fovLabel.Text = "FOV: " .. aimbotConfig.FOV
        if FOVring then
            FOVring.Radius = aimbotConfig.FOV
        end
    end
end)

fovSlider.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        fovSliding = false
    end
end)

-- Обновляем CanvasSize после добавления всех элементов
updateCanvasSize(scrollFrame)

-- Настройка содержимого вкладки VISUALS (автокликер и ESP)
local visualsTab = tabFrames["VISUALS"]

-- Добавляем ScrollingFrame для прокрутки
local visualsScrollFrame = Instance.new("ScrollingFrame")
visualsScrollFrame.Name = "VisualsScrollFrame"
visualsScrollFrame.Size = UDim2.new(1, 0, 1, 0)
visualsScrollFrame.Position = UDim2.new(0, 0, 0, 0)
visualsScrollFrame.BackgroundTransparency = 1
visualsScrollFrame.BorderSizePixel = 0
visualsScrollFrame.ScrollBarThickness = 5
visualsScrollFrame.CanvasSize = UDim2.new(0, 0, 0, 450) -- Начальный размер канваса, будет обновляться
visualsScrollFrame.Parent = visualsTab
print("ScrollingFrame добавлен для VISUALS")

-- Логика автокликера
local autoClickerEnabled = false
local autoClickerCPS = 10 -- Начальная частота кликов в секунду (Clicks Per Second)
local autoClickerBind = nil -- Начальная клавиша (не выбрана)
local autoClickerConnection

local function toggleAutoClicker()
    autoClickerEnabled = not autoClickerEnabled
    if autoClickerEnabled then
        -- Запускаем автокликер
        local clickInterval = 1 / autoClickerCPS -- Интервал между кликами в секундах
        autoClickerConnection = RunService.RenderStepped:Connect(function(deltaTime)
            -- Эмулируем клик левой кнопкой мыши
            local mouse = LocalPlayer:GetMouse()
            mouse1press()
            wait(0.01) -- Небольшая задержка для эмуляции нажатия
            mouse1release()
            wait(clickInterval - 0.01) -- Ждем оставшееся время до следующего клика
        end)
    else
        -- Останавливаем автокликер
        if autoClickerConnection then
            autoClickerConnection:Disconnect()
        end
    end
end

-- Переключатель для автокликера
local autoClickerToggle = Instance.new("TextButton")
autoClickerToggle.Name = "AutoClickerToggle"
autoClickerToggle.Size = UDim2.new(0, 120, 0, 30)
autoClickerToggle.Position = UDim2.new(0.5, -60, 0, 10)
autoClickerToggle.Text = "AutoClicker: OFF"
autoClickerToggle.TextColor3 = Color3.fromRGB(255, 255, 255)
autoClickerToggle.Font = Enum.Font.FredokaOne
autoClickerToggle.TextSize = 16
autoClickerToggle.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
autoClickerToggle.BorderSizePixel = 2
autoClickerToggle.BorderColor3 = Color3.fromRGB(255, 255, 255)
local autoClickerToggleCorner = Instance.new("UICorner")
autoClickerToggleCorner.CornerRadius = UDim.new(0, 5)
autoClickerToggleCorner.Parent = autoClickerToggle
autoClickerToggle.Parent = visualsScrollFrame
print("Переключатель автокликера добавлен")

-- Логика переключателя автокликера
autoClickerToggle.MouseButton1Click:Connect(function()
    toggleAutoClicker()
    autoClickerToggle.Text = "AutoClicker: " .. (autoClickerEnabled and "ON" or "OFF")
end)

-- Регулятор частоты кликов (слайдер)
local cpsSlider = Instance.new("Frame")
cpsSlider.Name = "CPSSlider"
cpsSlider.Size = UDim2.new(0, 200, 0, 20)
cpsSlider.Position = UDim2.new(0.5, -100, 0, 50)
cpsSlider.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
cpsSlider.BorderSizePixel = 2
cpsSlider.BorderColor3 = Color3.fromRGB(255, 255, 255)
local cpsSliderCorner = Instance.new("UICorner")
cpsSliderCorner.CornerRadius = UDim.new(0, 5)
cpsSliderCorner.Parent = cpsSlider
cpsSlider.Parent = visualsScrollFrame

local cpsSliderBar = Instance.new("Frame")
cpsSliderBar.Name = "CPSSliderBar"
cpsSliderBar.Size = UDim2.new(0, 20, 1, 0)
cpsSliderBar.Position = UDim2.new((autoClickerCPS - 1) / 49, -10, 0, 0) -- Начальное значение CPS = 10
cpsSliderBar.BackgroundColor3 = Color3.fromRGB(200, 0, 0)
cpsSliderBar.BorderSizePixel = 0
local cpsSliderBarCorner = Instance.new("UICorner")
cpsSliderBarCorner.CornerRadius = UDim.new(0, 5)
cpsSliderBarCorner.Parent = cpsSliderBar
cpsSliderBar.Parent = cpsSlider

local cpsLabel = Instance.new("TextLabel")
cpsLabel.Name = "CPSLabel"
cpsLabel.Size = UDim2.new(0, 100, 0, 20)
cpsLabel.Position = UDim2.new(0.5, -50, 0, 80)
cpsLabel.Text = "CPS: 10"
cpsLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
cpsLabel.Font = Enum.Font.FredokaOne
cpsLabel.TextSize = 16
cpsLabel.BackgroundTransparency = 1
cpsLabel.Parent = visualsScrollFrame
print("Слайдер частоты кликов добавлен")

-- Логика слайдера для частоты кликов
local cpsSliding = false
cpsSlider.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        cpsSliding = true
    end
end)

cpsSlider.InputChanged:Connect(function(input)
    if cpsSliding and input.UserInputType == Enum.UserInputType.MouseMovement then
        local mouseX = input.Position.X
        local sliderX = cpsSlider.AbsolutePosition.X
        local sliderWidth = cpsSlider.AbsoluteSize.X
        local relativeX = math.clamp((mouseX - sliderX) / sliderWidth, 0, 1)
        cpsSliderBar.Position = UDim2.new(relativeX, -10, 0, 0)
        autoClickerCPS = math.floor(relativeX * 49) + 1 -- CPS от 1 до 50
        cpsLabel.Text = "CPS: " .. autoClickerCPS
        -- Если автокликер включен, перезапускаем его с новой частотой
        if autoClickerEnabled then
            toggleAutoClicker() -- Выключаем
            toggleAutoClicker() -- Включаем с новой частотой
        end
    end
end)

cpsSlider.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        cpsSliding = false
    end
end)

-- Кнопка для выбора клавиши (бинда)
local bindButton = Instance.new("TextButton")
bindButton.Name = "BindButton"
bindButton.Size = UDim2.new(0, 120, 0, 30)
bindButton.Position = UDim2.new(0.5, -60, 0, 110)
bindButton.Text = "Bind: None"
bindButton.TextColor3 = Color3.fromRGB(255, 255, 255)
bindButton.Font = Enum.Font.FredokaOne
bindButton.TextSize = 16
bindButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
bindButton.BorderSizePixel = 2
bindButton.BorderColor3 = Color3.fromRGB(255, 255, 255)
local bindButtonCorner = Instance.new("UICorner")
bindButtonCorner.CornerRadius = UDim.new(0, 5)
bindButtonCorner.Parent = bindButton
bindButton.Parent = visualsScrollFrame
print("Кнопка выбора клавиши для автокликера добавлена")

-- Логика выбора клавиши
local binding = false
bindButton.MouseButton1Click:Connect(function()
    binding = true
    bindButton.Text = "Bind: Press a key..."
end)

UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if binding and input.UserInputType == Enum.UserInputType.Keyboard and not gameProcessed then
        autoClickerBind = input.KeyCode
        bindButton.Text = "Bind: " .. autoClickerBind.Name
        binding = false
        print("Клавиша для автокликера выбрана: " .. autoClickerBind.Name)
    end
    -- Логика включения/выключения автокликера по клавише
    if not binding and autoClickerBind and input.KeyCode == autoClickerBind and not gameProcessed then
        toggleAutoClicker()
        autoClickerToggle.Text = "AutoClicker: " .. (autoClickerEnabled and "ON" or "OFF")
    end
end)

-- Логика ESP
local espEnabled = {
    Box = false,
    Tracer = false,
    Outline = false,
    Name = false
}

local espData = {} -- Хранит элементы ESP для каждого игрока

-- Определяем цвета для ESP
local espColors = {
    Red = Color3.fromRGB(255, 0, 0),
    Blue = Color3.fromRGB(0, 128, 255),
    Yellow = Color3.fromRGB(255, 255, 0),
    Purple = Color3.fromRGB(128, 0, 128),
    Black = Color3.fromRGB(0, 0, 0)
}

local currentESPColor = "Red"

-- Функция для создания ESP для игрока
local function createESP(player)
    if player == LocalPlayer or not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then
        return
    end

    local esp = {
        Box = nil,
        Tracer = nil,
        Outline = nil,
        Name = nil
    }

    -- Box ESP (2D коробка)
    if Drawing then
        esp.Box = {
            TopLeft = Drawing.new("Line"),
            TopRight = Drawing.new("Line"),
            BottomLeft = Drawing.new("Line"),
            BottomRight = Drawing.new("Line")
        }
        for _, line in pairs(esp.Box) do
            line.Thickness = 1
            line.Color = espColors[currentESPColor]
            line.Transparency = 1
            line.Visible = false
        end
    end

    -- Tracer ESP (линия от центра экрана)
    if Drawing then
        esp.Tracer = Drawing.new("Line")
        esp.Tracer.Thickness = 1
        esp.Tracer.Color = espColors[currentESPColor]
        esp.Tracer.Transparency = 1
        esp.Tracer.Visible = false
    end

    -- Outline ESP (обводка)
    esp.Outline = Instance.new("Highlight")
    esp.Outline.FillTransparency = 1
    esp.Outline.OutlineColor = espColors[currentESPColor]
    esp.Outline.OutlineTransparency = 0
    esp.Outline.Enabled = false
    esp.Outline.Parent = player.Character

    -- Name ESP (имя над головой)
    local billboard = Instance.new("BillboardGui")
    billboard.Name = "NameESP"
    billboard.Size = UDim2.new(0, 100, 0, 30)
    billboard.StudsOffset = Vector3.new(0, 3, 0)
    billboard.AlwaysOnTop = true
    billboard.Enabled = false

    local nameLabel = Instance.new("TextLabel")
    nameLabel.Size = UDim2.new(1, 0, 1, 0)
    nameLabel.BackgroundTransparency = 1
    nameLabel.Text = player.Name
    nameLabel.TextColor3 = espColors[currentESPColor]
    nameLabel.TextSize = 14
    nameLabel.Font = Enum.Font.FredokaOne
    nameLabel.Parent = billboard

    billboard.Parent = player.Character.HumanoidRootPart
    esp.Name = billboard

    espData[player] = esp
end

-- Функция для обновления цвета ESP
local function updateESPColor()
    for _, esp in pairs(espData) do
        if esp.Box then
            for _, line in pairs(esp.Box) do
                line.Color = espColors[currentESPColor]
            end
        end
        if esp.Tracer then
            esp.Tracer.Color = espColors[currentESPColor]
        end
        if esp.Outline then
            esp.Outline.OutlineColor = espColors[currentESPColor]
        end
        if esp.Name then
            esp.Name:FindFirstChildOfClass("TextLabel").TextColor3 = espColors[currentESPColor]
        end
    end
end

-- Функция для обновления ESP
local function updateESP()
    for player, esp in pairs(espData) do
        if not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") or not player.Character:FindFirstChild("Head") then
            -- Удаляем ESP, если персонаж игрока исчез
            if esp.Box then
                for _, line in pairs(esp.Box) do
                    line:Remove()
                end
            end
            if esp.Tracer then
                esp.Tracer:Remove()
            end
            if esp.Outline then
                esp.Outline:Destroy()
            end
            if esp.Name then
                esp.Name:Destroy()
            end
            espData[player] = nil
            continue
        end

        local rootPart = player.Character.HumanoidRootPart
        local head = player.Character.Head
        local camera = workspace.CurrentCamera

        -- Box ESP
        if espEnabled.Box and esp.Box then
            local rootPos, onScreen = camera:WorldToViewportPoint(rootPart.Position)
            if onScreen then
                local headPos = camera:WorldToViewportPoint(head.Position + Vector3.new(0, 1, 0))
                local legsPos = camera:WorldToViewportPoint(rootPart.Position - Vector3.new(0, 4, 0))

                local topLeft = Vector2.new(headPos.X - 20, headPos.Y)
                local topRight = Vector2.new(headPos.X + 20, headPos.Y)
                local bottomLeft = Vector2.new(legsPos.X - 20, legsPos.Y)
                local bottomRight = Vector2.new(legsPos.X + 20, legsPos.Y)

                esp.Box.TopLeft.From = topLeft
                esp.Box.TopLeft.To = topRight
                esp.Box.TopRight.From = topRight
                esp.Box.TopRight.To = bottomRight
                esp.Box.BottomRight.From = bottomRight
                esp.Box.BottomRight.To = bottomLeft
                esp.Box.BottomLeft.From = bottomLeft
                esp.Box.BottomLeft.To = topLeft

                for _, line in pairs(esp.Box) do
                    line.Visible = true
                end
            else
                for _, line in pairs(esp.Box) do
                    line.Visible = false
                end
            end
        elseif esp.Box then
            for _, line in pairs(esp.Box) do
                line.Visible = false
            end
        end

        -- Tracer ESP
        if espEnabled.Tracer and esp.Tracer then
            local rootPos, onScreen = camera:WorldToViewportPoint(rootPart.Position)
            if onScreen then
                local screenCenter = camera.ViewportSize / 2
                esp.Tracer.From = screenCenter
                esp.Tracer.To = Vector2.new(rootPos.X, rootPos.Y)
                esp.Tracer.Visible = true
            else
                esp.Tracer.Visible = false
            end
        elseif esp.Tracer then
            esp.Tracer.Visible = false
        end

        -- Outline ESP
        if espEnabled.Outline and esp.Outline then
            esp.Outline.Enabled = true
        elseif esp.Outline then
            esp.Outline.Enabled = false
        end

        -- Name ESP
        if espEnabled.Name and esp.Name then
            esp.Name.Enabled = true
        elseif esp.Name then
            esp.Name.Enabled = false
        end
    end
end

-- Создаем ESP для существующих игроков
for _, player in pairs(Players:GetPlayers()) do
    if player ~= LocalPlayer then
        createESP(player)
    end
end

-- Создаем ESP для новых игроков
Players.PlayerAdded:Connect(function(player)
    if player ~= LocalPlayer then
        player.CharacterAdded:Connect(function()
            createESP(player)
        end)
    end
end)

-- Обновляем ESP каждый кадр
RunService.RenderStepped:Connect(updateESP)

-- Заголовок для раздела ESP
local espTitle = Instance.new("TextLabel")
espTitle.Name = "ESPTitle"
espTitle.Size = UDim2.new(0, 200, 0, 30)
espTitle.Position = UDim2.new(0.5, -100, 0, 150)
espTitle.Text = "ESP Settings"
espTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
espTitle.Font = Enum.Font.FredokaOne
espTitle.TextSize = 20
espTitle.BackgroundTransparency = 1
espTitle.Parent = visualsScrollFrame
print("Заголовок ESP Settings добавлен")

-- Переключатель для Box ESP
local boxESPToggle = Instance.new("TextButton")
boxESPToggle.Name = "BoxESPToggle"
boxESPToggle.Size = UDim2.new(0, 120, 0, 30)
boxESPToggle.Position = UDim2.new(0.5, -60, 0, 190)
boxESPToggle.Text = "Box ESP: OFF"
boxESPToggle.TextColor3 = Color3.fromRGB(255, 255, 255)
boxESPToggle.Font = Enum.Font.FredokaOne
boxESPToggle.TextSize = 16
boxESPToggle.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
boxESPToggle.BorderSizePixel = 2
boxESPToggle.BorderColor3 = Color3.fromRGB(255, 255, 255)
local boxESPToggleCorner = Instance.new("UICorner")
boxESPToggleCorner.CornerRadius = UDim.new(0, 5)
boxESPToggleCorner.Parent = boxESPToggle
boxESPToggle.Parent = visualsScrollFrame
print("Переключатель Box ESP добавлен")

boxESPToggle.MouseButton1Click:Connect(function()
    espEnabled.Box = not espEnabled.Box
    boxESPToggle.Text = "Box ESP: " .. (espEnabled.Box and "ON" or "OFF")
end)

-- Переключатель для Tracer ESP
local tracerESPToggle = Instance.new("TextButton")
tracerESPToggle.Name = "TracerESPToggle"
tracerESPToggle.Size = UDim2.new(0, 120, 0, 30)
tracerESPToggle.Position = UDim2.new(0.5, -60, 0, 230)
tracerESPToggle.Text = "Tracer ESP: OFF"
tracerESPToggle.TextColor3 = Color3.fromRGB(255, 255, 255)
tracerESPToggle.Font = Enum.Font.FredokaOne
tracerESPToggle.TextSize = 16
tracerESPToggle.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
tracerESPToggle.BorderSizePixel = 2
tracerESPToggle.BorderColor3 = Color3.fromRGB(255, 255, 255)
local tracerESPToggleCorner = Instance.new("UICorner")
tracerESPToggleCorner.CornerRadius = UDim.new(0, 5)
tracerESPToggleCorner.Parent = tracerESPToggle
tracerESPToggle.Parent = visualsScrollFrame
print("Переключатель Tracer ESP добавлен")

tracerESPToggle.MouseButton1Click:Connect(function()
    espEnabled.Tracer = not espEnabled.Tracer
    tracerESPToggle.Text = "Tracer ESP: " .. (espEnabled.Tracer and "ON" or "OFF")
end)

-- Переключатель для Outline ESP
local outlineESPToggle = Instance.new("TextButton")
outlineESPToggle.Name = "OutlineESPToggle"
outlineESPToggle.Size = UDim2.new(0, 120, 0, 30)
outlineESPToggle.Position = UDim2.new(0.5, -60, 0, 270)
outlineESPToggle.Text = "Outline ESP: OFF"
outlineESPToggle.TextColor3 = Color3.fromRGB(255, 255, 255)
outlineESPToggle.Font = Enum.Font.FredokaOne
outlineESPToggle.TextSize = 16
outlineESPToggle.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
outlineESPToggle.BorderSizePixel = 2
outlineESPToggle.BorderColor3 = Color3.fromRGB(255, 255, 255)
local outlineESPToggleCorner = Instance.new("UICorner")
outlineESPToggleCorner.CornerRadius = UDim.new(0, 5)
outlineESPToggleCorner.Parent = outlineESPToggle
outlineESPToggle.Parent = visualsScrollFrame
print("Переключатель Outline ESP добавлен")

outlineESPToggle.MouseButton1Click:Connect(function()
    espEnabled.Outline = not espEnabled.Outline
    outlineESPToggle.Text = "Outline ESP: " .. (espEnabled.Outline and "ON" or "OFF")
end)

-- Переключатель для Name ESP
local nameESPToggle = Instance.new("TextButton")
nameESPToggle.Name = "NameESPToggle"
nameESPToggle.Size = UDim2.new(0, 120, 0, 30)
nameESPToggle.Position = UDim2.new(0.5, -60, 0, 310)
nameESPToggle.Text = "Name ESP: OFF"
nameESPToggle.TextColor3 = Color3.fromRGB(255, 255, 255)
nameESPToggle.Font = Enum.Font.FredokaOne
nameESPToggle.TextSize = 16
nameESPToggle.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
nameESPToggle.BorderSizePixel = 2
nameESPToggle.BorderColor3 = Color3.fromRGB(255, 255, 255)
local nameESPToggleCorner = Instance.new("UICorner")
nameESPToggleCorner.CornerRadius = UDim.new(0, 5)
nameESPToggleCorner.Parent = nameESPToggle
nameESPToggle.Parent = visualsScrollFrame
print("Переключатель Name ESP добавлен")

nameESPToggle.MouseButton1Click:Connect(function()
    espEnabled.Name = not espEnabled.Name
    nameESPToggle.Text = "Name ESP: " .. (espEnabled.Name and "ON" or "OFF")
end)

-- Кнопка для выбора цвета ESP
local espColorButton = Instance.new("TextButton")
espColorButton.Name = "ESPColorButton"
espColorButton.Size = UDim2.new(0, 120, 0, 30)
espColorButton.Position = UDim2.new(0.5, -60, 0, 350)
espColorButton.Text = "ESP Color: Red"
espColorButton.TextColor3 = Color3.fromRGB(255, 255, 255)
espColorButton.Font = Enum.Font.FredokaOne
espColorButton.TextSize = 16
espColorButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
espColorButton.BorderSizePixel = 2
espColorButton.BorderColor3 = Color3.fromRGB(255, 255, 255)
local espColorButtonCorner = Instance.new("UICorner")
espColorButtonCorner.CornerRadius = UDim.new(0, 5)
espColorButtonCorner.Parent = espColorButton
espColorButton.Parent = visualsScrollFrame
print("Кнопка выбора цвета ESP добавлена")

-- Логика смены цвета ESP
local espColorOrder = {"Red", "Blue", "Yellow", "Purple", "Black"}
local espColorIndex = 1

espColorButton.MouseButton1Click:Connect(function()
    espColorIndex = (espColorIndex % #espColorOrder) + 1
    currentESPColor = espColorOrder[espColorIndex]
    espColorButton.Text = "ESP Color: " .. currentESPColor
    updateESPColor()
end)

-- Обновляем CanvasSize после добавления всех элементов
updateCanvasSize(visualsScrollFrame)

-- Настройка содержимого вкладки SETTINGS (смена цвета меню)
local settingsTab = tabFrames["SETTINGS"]

-- Добавляем ScrollingFrame для прокрутки
local settingsScrollFrame = Instance.new("ScrollingFrame")
settingsScrollFrame.Name = "SettingsScrollFrame"
settingsScrollFrame.Size = UDim2.new(1, 0, 1, 0)
settingsScrollFrame.Position = UDim2.new(0, 0, 0, 0)
settingsScrollFrame.BackgroundTransparency = 1
settingsScrollFrame.BorderSizePixel = 0
settingsScrollFrame.ScrollBarThickness = 5
settingsScrollFrame.CanvasSize = UDim2.new(0, 0, 0, 200) -- Начальный размер канваса, будет обновляться
settingsScrollFrame.Parent = settingsTab
print("ScrollingFrame добавлен для SETTINGS")

-- Определяем цвета для меню
local menuColors = {
    Green = {Main = Color3.fromRGB(40, 100, 40), Top = Color3.fromRGB(0, 200, 0), Side = Color3.fromRGB(50, 120, 50), Content = Color3.fromRGB(50, 120, 50)},
    Yellow = {Main = Color3.fromRGB(100, 100, 40), Top = Color3.fromRGB(200, 200, 0), Side = Color3.fromRGB(120, 120, 50), Content = Color3.fromRGB(120, 120, 50)},
    Blue = {Main = Color3.fromRGB(40, 40, 100), Top = Color3.fromRGB(0, 0, 200), Side = Color3.fromRGB(50, 50, 120), Content = Color3.fromRGB(50, 50, 120)},
    Purple = {Main = Color3.fromRGB(80, 40, 80), Top = Color3.fromRGB(160, 0, 160), Side = Color3.fromRGB(100, 50, 100), Content = Color3.fromRGB(100, 50, 100)},
    White = {Main = Color3.fromRGB(200, 200, 200), Top = Color3.fromRGB(255, 255, 255), Side = Color3.fromRGB(220, 220, 220), Content = Color3.fromRGB(220, 220, 220)}
}

local currentMenuColor = "Green"

-- Функция для обновления цвета меню
local function updateMenuColor()
    local selectedColor = menuColors[currentMenuColor]
    mainFrame.BackgroundColor3 = selectedColor.Main
    topBar.BackgroundColor3 = selectedColor.Top
    leftPanel.BackgroundColor3 = selectedColor.Side
    contentPanel.BackgroundColor3 = selectedColor.Content
end

-- Заголовок для раздела настроек
local settingsTitle = Instance.new("TextLabel")
settingsTitle.Name = "SettingsTitle"
settingsTitle.Size = UDim2.new(0, 200, 0, 30)
settingsTitle.Position = UDim2.new(0.5, -100, 0, 10)
settingsTitle.Text = "Menu Settings"
settingsTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
settingsTitle.Font = Enum.Font.FredokaOne
settingsTitle.TextSize = 20
settingsTitle.BackgroundTransparency = 1
settingsTitle.Parent = settingsScrollFrame
print("Заголовок Menu Settings добавлен")

-- Кнопка для выбора цвета меню
local menuColorButton = Instance.new("TextButton")
menuColorButton.Name = "MenuColorButton"
menuColorButton.Size = UDim2.new(0, 120, 0, 30)
menuColorButton.Position = UDim2.new(0.5, -60, 0, 50)
menuColorButton.Text = "Menu Color: Green"
menuColorButton.TextColor3 = Color3.fromRGB(255, 255, 255)
menuColorButton.Font = Enum.Font.FredokaOne
menuColorButton.TextSize = 16
menuColorButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
menuColorButton.BorderSizePixel = 2
menuColorButton.BorderColor3 = Color3.fromRGB(255, 255, 255)
local menuColorButtonCorner = Instance.new("UICorner")
menuColorButtonCorner.CornerRadius = UDim.new(0, 5)
menuColorButtonCorner.Parent = menuColorButton
menuColorButton.Parent = settingsScrollFrame
print("Кнопка выбора цвета меню добавлена")

-- Логика смены цвета меню
local menuColorOrder = {"Green", "Yellow", "Blue", "Purple", "White"}
local menuColorIndex = 1

menuColorButton.MouseButton1Click:Connect(function()
    menuColorIndex = (menuColorIndex % #menuColorOrder) + 1
    currentMenuColor = menuColorOrder[menuColorIndex]
    menuColorButton.Text = "Menu Color: " .. currentMenuColor
    updateMenuColor()
end)

-- Устанавливаем начальный цвет меню (Green)
updateMenuColor()

-- Обновляем CanvasSize после добавления всех элементов
updateCanvasSize(settingsScrollFrame)
